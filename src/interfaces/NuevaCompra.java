/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import Funciones.BasededatosManager;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author MauricioNTHINGs
 */
public class NuevaCompra extends javax.swing.JInternalFrame {

    /**
     * Creates new form NuevaCompra
     */
    String user, pass;
    JComboBox combo = new JComboBox();
    JComboBox combo2 = new JComboBox();
    JComboBox combo3 = new JComboBox();
    
    BasededatosManager bd;
    public NuevaCompra(String usuario, String password) {
        try {
            this.user=usuario;
            this.pass=password;
            this.bd=new BasededatosManager();
            initComponents();
            
            //Llenar el combo de tipos de persianas
            ResultSet consulta=bd.consultar("SELECT DISTINCT tipodepersianas FROM Muestrario", user, pass);
            while (consulta.next()) {
                combo.addItem(consulta.getObject("tipodepersianas"));
            }
            //Asignar el combo a la celda de la tabla
            TableColumn columnatipo= jTable1.getColumnModel().getColumn(3);
            columnatipo.setCellEditor(new DefaultCellEditor(combo));
            //Agregar un item listener para detectar cuando se haya elegido un tipo y llenar los otros dos combos ya que dependen del tipo de persiana que se seleccione
            combo.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    try {
                        combo2.removeAllItems();
                        //consultar los nombres de las telas que pertenezcan al tipo seleccionado
                        ResultSet consulta = bd.consultar("SELECT nombretela FROM Telas WHERE tipopersiana='" + combo.getSelectedItem() + "';", user, pass);
                        while (consulta.next()) {
                            combo2.addItem(consulta.getObject("nombretela"));
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(NuevaCompra.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            TableColumn columnatipo2= jTable1.getColumnModel().getColumn(4);
            columnatipo2.setCellEditor(new DefaultCellEditor(combo2));
            combo2.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    try {
                        combo3.removeAllItems();
                        //consultar los colores de la tela dependiendo de su nombre seleccionado y su tipo
                        ResultSet consulta = bd.consultar("SELECT color FROM Telas WHERE tipopersiana='" + combo.getSelectedItem() + "' AND nombretela='" + combo2.getSelectedItem() + "';", user, pass);
                        while (consulta.next()) {
                            combo3.addItem(consulta.getObject("color"));
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(NuevaCompra.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            TableColumn columnatipo3= jTable1.getColumnModel().getColumn(5);
            columnatipo3.setCellEditor(new DefaultCellEditor(combo3));
            jTable1.setAutoCreateRowSorter(true);
        } catch (SQLException ex) {
            Logger.getLogger(NuevaCompra.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        totallabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Presupuesto");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Cantidad", "Anchos", "Altos", "Tipos", "Telas", "Colores", "Costos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Calcular Costos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TOTAL");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("$");

        totallabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        totallabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totallabel.setText("00.00");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("SIN IVA");

        jButton4.setText("REALIZAR PEDIDO");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totallabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totallabel)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int filas = 0;
        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        modelo.addRow(new Object[filas]);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel miTableModel = (DefaultTableModel) jTable1.getModel();
        int indFil = jTable1.getSelectedRow();
        if (indFil >= 0) {
            miTableModel.removeRow(indFil);
        } else {
            JOptionPane.showMessageDialog(null, "No hay una fila seleccionada", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    void calcularCostos(){
        double m2=0;
        double costo=0;
        double costopublico=0;
        totallabel.setText("00.00");
        for(int a=0; a<jTable1.getRowCount();a++){
            try {
                ResultSet consulta=bd.consultar("SELECT preciopublico FROM Telas WHERE tipopersiana='"+combo.getSelectedItem()+"' AND nombretela='"+combo2.getSelectedItem()+"' AND color='"+combo3.getSelectedItem()+"';", user, pass);
                while(consulta.next()){
                    costopublico=consulta.getDouble("preciopublico");
                }
                m2=(Double.parseDouble(jTable1.getValueAt(a,1).toString())*Double.parseDouble(jTable1.getValueAt(a,2).toString()));
                costo=(m2*costopublico)*(Double.parseDouble(jTable1.getValueAt(a,0).toString()));
                jTable1.setValueAt("$"+costo, a,6);
                totallabel.setText(Double.toString(Double.parseDouble(totallabel.getText())+costo));
            } catch (SQLException ex) {
                Logger.getLogger(NuevaCompra.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        calcularCostos();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        calcularCostos();
        double altos[]=new double[jTable1.getRowCount()];
        double anchos[]=new double[jTable1.getRowCount()];
        int cantidades[]=new int[jTable1.getRowCount()];
        String modelos[]=new String[jTable1.getRowCount()];
        String colores[]=new String[jTable1.getRowCount()];
        String tipos[]=new String[jTable1.getRowCount()];
        for(int a=0; a<jTable1.getRowCount();a++){
            cantidades[a]=Integer.parseInt(jTable1.getValueAt(a,0).toString());
            anchos[a]=Double.parseDouble(jTable1.getValueAt(a, 1).toString());
            altos[a]=Double.parseDouble(jTable1.getValueAt(a, 2).toString());
            tipos[a]=jTable1.getValueAt(a, 3).toString();
            modelos[a]=jTable1.getValueAt(a,4).toString();
            colores[a]=jTable1.getValueAt(a, 5).toString();
        }
        Clientes clientes=new Clientes(user,pass,anchos,altos,cantidades,modelos,colores,tipos,totallabel.getText());
        Principal.desktopPane.add(clientes);
        clientes.show();
        
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel totallabel;
    // End of variables declaration//GEN-END:variables
}
