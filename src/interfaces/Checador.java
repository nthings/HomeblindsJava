/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

/**
 *
 * @author nthings
 */
import Funciones.BasededatosManager;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
public class Checador extends javax.swing.JInternalFrame {

    /**
     * Creates new form Checador
     */
    String user, password, empleado;
    BasededatosManager bd=new BasededatosManager();
    public Checador(String us, String pass) {
        try {
            initComponents();
            this.user=us;
            this.password=pass;
            ResultSet consulta=bd.consultar("SELECT id_empleado FROM Empleado WHERE usuariosistema='"+user+"';", user, password);
            while(consulta.next()){
                this.empleado=consulta.getString("id_empleado");
            }
            
            consultarEntradaSalida();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Usuario no encontrado","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        
        reloj.setBackground(Color.BLACK);
        reloj.setOpaque(true);
        reloj1.setBackground(Color.BLACK);
        reloj1.setOpaque(true);
        
        new Thread(){
            public void run(){
                while(true){
                    DateTimeFormatter formatter=DateTimeFormatter.ofPattern("HH:mm");
                    DateTimeFormatter formatter1=DateTimeFormatter.ofPattern("dd-MM-yyyy");
                    LocalTime time=LocalTime.now();
                    LocalDate date=LocalDate.now();
                    reloj.setText(date.format(formatter1));
                    reloj1.setText(time.format(formatter));
                }
            }
        }.start();
    }
    
    public void consultarEntradaSalida(){
        try {
            ResultSet consulta1=bd.consultar("SELECT * FROM Checador WHERE empleado_id_empleado='"+empleado+"' AND fecha='"+LocalDate.now()+"';", user, password);
            if(consulta1.first()){
                jButton1.setEnabled(false);
                jButton1.setText("YA SE REGISTRO ENTRADA ESTE DÍA");
            }
            ResultSet consulta2=bd.consultar("SELECT * FROM Checador WHERE empleado_id_empleado='"+empleado+"' AND fecha='"+LocalDate.now()+"' AND hora_salida IS NOT NULL;", user, password);
            if(consulta2.first()){
                jButton2.setEnabled(false);
                jButton2.setText("YA SE REGISTRO SALIDA ESTE DÍA");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Checador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reloj = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        reloj1 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Checador");

        reloj.setBackground(new java.awt.Color(0, 0, 0));
        reloj.setFont(new java.awt.Font("DS-Digital", 1, 48)); // NOI18N
        reloj.setForeground(new java.awt.Color(0, 0, 255));
        reloj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reloj.setText("RELOJITO");
        reloj.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setForeground(new java.awt.Color(20, 100, 246));
        jButton1.setText("REGISTRAR ENTRADA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(20, 100, 246));
        jButton2.setText("REGISTRAR SALIDA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(20, 100, 246));
        jLabel1.setText("Hora");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(20, 100, 246));
        jLabel2.setText("Fecha");

        reloj1.setBackground(new java.awt.Color(0, 0, 0));
        reloj1.setFont(new java.awt.Font("DS-Digital", 1, 48)); // NOI18N
        reloj1.setForeground(new java.awt.Color(0, 0, 255));
        reloj1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reloj1.setText("RELOJITO");
        reloj1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reloj1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reloj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(reloj1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reloj)))
                .addGap(25, 25, 25)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int opc=JOptionPane.showConfirmDialog(null, "¿Deseas registrar tu entrada para hoy?","Registrar",JOptionPane.YES_NO_OPTION);
        if(opc==JOptionPane.YES_OPTION){
            bd.ejecutar("INSERT INTO Checador (fecha, hora_entrada,empleado_id_empleado) VALUES('"+LocalDate.now()+"','"+LocalTime.now()+"','"+empleado+"');", user, password);
            consultarEntradaSalida();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int opc=JOptionPane.showConfirmDialog(null, "¿Deseas registrar tu salida para hoy?","Registrar",JOptionPane.YES_NO_OPTION);
        if(opc==JOptionPane.YES_OPTION){
            bd.ejecutar("UPDATE Checador SET hora_salida='"+LocalTime.now()+"' WHERE fecha='"+LocalDate.now()+"' AND empleado_id_empleado='"+empleado+"';", user, password);
            consultarEntradaSalida();
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel reloj;
    private javax.swing.JLabel reloj1;
    // End of variables declaration//GEN-END:variables
}
